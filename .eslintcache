[{"C:\\Users\\Martin\\spoti-vision\\src\\index.js":"1","C:\\Users\\Martin\\spoti-vision\\src\\store\\store.js":"2","C:\\Users\\Martin\\spoti-vision\\src\\router\\AppRouter.js":"3","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\playlist.js":"4","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\profile.js":"5","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\albums.js":"6","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\artists.js":"7","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\player.js":"8","C:\\Users\\Martin\\spoti-vision\\src\\components\\RedirectPage.js":"9","C:\\Users\\Martin\\spoti-vision\\src\\components\\Home.js":"10","C:\\Users\\Martin\\spoti-vision\\src\\components\\Dashboard.js":"11","C:\\Users\\Martin\\spoti-vision\\src\\components\\Visualizer.js":"12","C:\\Users\\Martin\\spoti-vision\\src\\components\\NotFoundPage.js":"13","C:\\Users\\Martin\\spoti-vision\\src\\components\\Header.js":"14","C:\\Users\\Martin\\spoti-vision\\src\\components\\SearchForm.js":"15","C:\\Users\\Martin\\spoti-vision\\src\\components\\Loader.js":"16","C:\\Users\\Martin\\spoti-vision\\src\\components\\Profile.js":"17","C:\\Users\\Martin\\spoti-vision\\src\\components\\SearchResult.js":"18","C:\\Users\\Martin\\spoti-vision\\src\\utils\\functions.js":"19","C:\\Users\\Martin\\spoti-vision\\src\\utils\\constants.js":"20","C:\\Users\\Martin\\spoti-vision\\src\\actions\\result.js":"21","C:\\Users\\Martin\\spoti-vision\\src\\components\\Current.js":"22","C:\\Users\\Martin\\spoti-vision\\src\\components\\PlayList.js":"23","C:\\Users\\Martin\\spoti-vision\\src\\utils\\api.js":"24","C:\\Users\\Martin\\spoti-vision\\src\\components\\AlbumsList.js":"25","C:\\Users\\Martin\\spoti-vision\\src\\components\\ArtistsList.js":"26","C:\\Users\\Martin\\spoti-vision\\src\\utils\\styles.js":"27"},{"size":331,"mtime":1612443888007,"results":"28","hashOfConfig":"29"},{"size":728,"mtime":1612792123971,"results":"30","hashOfConfig":"29"},{"size":2073,"mtime":1613317649246,"results":"31","hashOfConfig":"29"},{"size":476,"mtime":1613413135985,"results":"32","hashOfConfig":"29"},{"size":543,"mtime":1613491916689,"results":"33","hashOfConfig":"29"},{"size":438,"mtime":1612957936655,"results":"34","hashOfConfig":"29"},{"size":448,"mtime":1612447148613,"results":"35","hashOfConfig":"29"},{"size":386,"mtime":1613231057053,"results":"36","hashOfConfig":"29"},{"size":797,"mtime":1612427770541,"results":"37","hashOfConfig":"29"},{"size":1368,"mtime":1613415791744,"results":"38","hashOfConfig":"29"},{"size":3158,"mtime":1613495500489,"results":"39","hashOfConfig":"29"},{"size":3497,"mtime":1613499757544,"results":"40","hashOfConfig":"29"},{"size":318,"mtime":1612265170538,"results":"41","hashOfConfig":"29"},{"size":327,"mtime":1612944627365,"results":"42","hashOfConfig":"29"},{"size":1438,"mtime":1612445577115,"results":"43","hashOfConfig":"29"},{"size":689,"mtime":1612186723393,"results":"44","hashOfConfig":"29"},{"size":4898,"mtime":1613499663485,"results":"45","hashOfConfig":"29"},{"size":2449,"mtime":1612444051794,"results":"46","hashOfConfig":"29"},{"size":582,"mtime":1612981134869,"results":"47","hashOfConfig":"29"},{"size":495,"mtime":1613491853474,"results":"48","hashOfConfig":"29"},{"size":4227,"mtime":1613491934102,"results":"49","hashOfConfig":"29"},{"size":427,"mtime":1613498659415,"results":"50","hashOfConfig":"29"},{"size":2049,"mtime":1613412802108,"results":"51","hashOfConfig":"29"},{"size":852,"mtime":1613393370132,"results":"52","hashOfConfig":"29"},{"size":2075,"mtime":1613393284909,"results":"53","hashOfConfig":"29"},{"size":1888,"mtime":1613412806774,"results":"54","hashOfConfig":"29"},{"size":789,"mtime":1613495830294,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1uc0eb9",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Martin\\spoti-vision\\src\\index.js",[],["115","116"],"C:\\Users\\Martin\\spoti-vision\\src\\store\\store.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\router\\AppRouter.js",["117"],"import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport RedirectPage from '../components/RedirectPage';\r\nimport Dashboard from '../components/Dashboard';\r\nimport NotFoundPage from '../components/NotFoundPage';\r\nimport { Container } from '@material-ui/core';\r\nimport Visualizer from '../components/Visualizer';\r\n\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    expiryTime: '0',\r\n  };\r\n\r\n  componentDidMount() {\r\n    let expiryTime;\r\n    try {\r\n      expiryTime = JSON.parse(localStorage.getItem('expiry_time'));\r\n    } catch (error) {\r\n      expiryTime = '0';\r\n    }\r\n    this.setState({ expiryTime });\r\n  }\r\n\r\n  setExpiryTime = expiryTime => {\r\n    this.setState({ expiryTime });\r\n  };\r\n\r\n  isValidSession = () => {\r\n    const currentTime = new Date().getTime();\r\n    const expiryTime = this.state.expiryTime;\r\n    const isSessionValid = currentTime < expiryTime;\r\n\r\n    return isSessionValid;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact={true}\r\n            render={props => (\r\n              <Home isValidSession={this.isValidSession} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/redirect\"\r\n            render={props => (\r\n              <RedirectPage\r\n                isValidSession={this.isValidSession}\r\n                setExpiryTime={this.setExpiryTime}\r\n                {...props}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/dashboard\"\r\n            render={props => (\r\n              <Dashboard isValidSession={this.isValidSession} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/visualizer\"\r\n            render={props => (\r\n              <Visualizer isValidSession={this.isValidSession} {...props} />\r\n            )}\r\n          />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\playlist.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\reducers\\profile.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\reducers\\albums.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\reducers\\artists.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\reducers\\player.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\RedirectPage.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Home.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Dashboard.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Visualizer.js",["118"],"C:\\Users\\Martin\\spoti-vision\\src\\components\\NotFoundPage.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Header.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\SearchForm.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Loader.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Profile.js",["119","120","121","122"],"C:\\Users\\Martin\\spoti-vision\\src\\components\\SearchResult.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\utils\\functions.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\utils\\constants.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\actions\\result.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Current.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\PlayList.js",["123"],"import React from 'react';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport _ from 'lodash';\r\nimport music from '../images/music-icon.jpg';\r\nimport { put } from '../utils/api';\r\n\r\nconst PlayList = ({ playlist }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(playlist).length > 0 && (\r\n        <div className=\"palylist\">\r\n          <Grid container spacing={4}>\r\n            {playlist.items.map((item, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Card\r\n                      style={{ width: '18rem' }}\r\n                      onClick={() => put(item.uri)}\r\n                    >\r\n                      <a\r\n                        target=\"_blank\"\r\n                        // href={item.external_urls.spotify}\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"card-image-link\"\r\n                      >\r\n                        {!_.isEmpty(item.images) ? (\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            image={item.images[0].url}\r\n                            title=\"\"\r\n                          />\r\n                        ) : (\r\n                          <img src={music} alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                      <CardContent>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                          {item.name}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                          By {item.owner.display_name}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlayList;\r\n","C:\\Users\\Martin\\spoti-vision\\src\\utils\\api.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\AlbumsList.js",["124"],"import React from 'react';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport _ from 'lodash';\r\nimport music from '../images/music-icon.jpg';\r\nimport { put } from '../utils/api';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          <Grid container spacing={4}>\r\n            {albums.items.map((album, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Card\r\n                      style={{ width: '18rem' }}\r\n                      onClick={() => put(album.uri)}\r\n                    >\r\n                      <a\r\n                        target=\"_blank\"\r\n                        //href={album.external_urls.spotify}\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"card-image-link\"\r\n                      >\r\n                        {!_.isEmpty(album.images) ? (\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            image={album.images[0].url}\r\n                            title=\"\"\r\n                          />\r\n                        ) : (\r\n                          <img src={music} alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                      <CardContent>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                          {album.name}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                          {album.artists.map(artist => artist.name).join(', ')}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;\r\n","C:\\Users\\Martin\\spoti-vision\\src\\components\\ArtistsList.js",["125"],"import React from 'react';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport _ from 'lodash';\r\nimport music from '../images/music-icon.jpg';\r\nimport { put } from '../utils/api';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          <Grid container spacing={4}>\r\n            {artists.items.map((artist, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Card\r\n                      style={{ width: '18rem' }}\r\n                      onClick={() => put(artist.uri)}\r\n                    >\r\n                      <a\r\n                        target=\"_blank\"\r\n                        // href={artist.external_urls.spotify}\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"card-image-link\"\r\n                      >\r\n                        {!_.isEmpty(artist.images) ? (\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            image={artist.images[0].url}\r\n                            title=\"\"\r\n                          />\r\n                        ) : (\r\n                          <img src={music} alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                      <CardContent>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                          {artist.name}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;\r\n","C:\\Users\\Martin\\spoti-vision\\src\\utils\\styles.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":7,"column":10,"nodeType":"132","messageId":"133","endLine":7,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":22,"column":6,"nodeType":"136","endLine":22,"endColumn":8,"suggestions":"137"},{"ruleId":"130","severity":1,"message":"138","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":19,"column":3,"nodeType":"132","messageId":"133","endLine":19,"endColumn":16},{"ruleId":"130","severity":1,"message":"140","line":35,"column":11,"nodeType":"132","messageId":"133","endLine":35,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":49,"column":6,"nodeType":"136","endLine":49,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":27,"column":23,"nodeType":"144","endLine":32,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":27,"column":23,"nodeType":"144","endLine":32,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":27,"column":23,"nodeType":"144","endLine":32,"endColumn":24},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["147"],"'useState' is defined but never used.","'getCoverImage' is defined but never used.","'albumCover' is assigned a value but never used.",["148"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"149","fix":"151"},"Update the dependencies array to be: [props]",{"range":"152","text":"153"},{"range":"154","text":"153"},[812,814],"[props]",[1277,1279]]