[{"C:\\Users\\Martin\\spoti-vision\\src\\index.js":"1","C:\\Users\\Martin\\spoti-vision\\src\\store\\store.js":"2","C:\\Users\\Martin\\spoti-vision\\src\\router\\AppRouter.js":"3","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\playlist.js":"4","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\profile.js":"5","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\albums.js":"6","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\artists.js":"7","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\player.js":"8","C:\\Users\\Martin\\spoti-vision\\src\\components\\RedirectPage.js":"9","C:\\Users\\Martin\\spoti-vision\\src\\components\\Home.js":"10","C:\\Users\\Martin\\spoti-vision\\src\\components\\Dashboard.js":"11","C:\\Users\\Martin\\spoti-vision\\src\\components\\Visualizer.js":"12","C:\\Users\\Martin\\spoti-vision\\src\\components\\NotFoundPage.js":"13","C:\\Users\\Martin\\spoti-vision\\src\\components\\Header.js":"14","C:\\Users\\Martin\\spoti-vision\\src\\components\\SearchForm.js":"15","C:\\Users\\Martin\\spoti-vision\\src\\components\\Loader.js":"16","C:\\Users\\Martin\\spoti-vision\\src\\components\\Profile.js":"17","C:\\Users\\Martin\\spoti-vision\\src\\components\\SearchResult.js":"18","C:\\Users\\Martin\\spoti-vision\\src\\utils\\functions.js":"19","C:\\Users\\Martin\\spoti-vision\\src\\utils\\constants.js":"20","C:\\Users\\Martin\\spoti-vision\\src\\actions\\result.js":"21","C:\\Users\\Martin\\spoti-vision\\src\\components\\Current.js":"22","C:\\Users\\Martin\\spoti-vision\\src\\components\\PlayList.js":"23","C:\\Users\\Martin\\spoti-vision\\src\\utils\\api.js":"24","C:\\Users\\Martin\\spoti-vision\\src\\components\\AlbumsList.js":"25","C:\\Users\\Martin\\spoti-vision\\src\\components\\ArtistsList.js":"26","C:\\Users\\Martin\\spoti-vision\\src\\utils\\styles.js":"27"},{"size":331,"mtime":1612443888007,"results":"28","hashOfConfig":"29"},{"size":728,"mtime":1613566048573,"results":"30","hashOfConfig":"29"},{"size":2073,"mtime":1613317649246,"results":"31","hashOfConfig":"29"},{"size":462,"mtime":1613566529449,"results":"32","hashOfConfig":"29"},{"size":543,"mtime":1613491916689,"results":"33","hashOfConfig":"29"},{"size":438,"mtime":1612957936655,"results":"34","hashOfConfig":"29"},{"size":448,"mtime":1612447148613,"results":"35","hashOfConfig":"29"},{"size":386,"mtime":1613231057053,"results":"36","hashOfConfig":"29"},{"size":797,"mtime":1612427770541,"results":"37","hashOfConfig":"29"},{"size":1368,"mtime":1613415791744,"results":"38","hashOfConfig":"29"},{"size":3158,"mtime":1613495500489,"results":"39","hashOfConfig":"29"},{"size":3658,"mtime":1613649957496,"results":"40","hashOfConfig":"29"},{"size":318,"mtime":1612265170538,"results":"41","hashOfConfig":"29"},{"size":327,"mtime":1612944627365,"results":"42","hashOfConfig":"29"},{"size":2209,"mtime":1613650108450,"results":"43","hashOfConfig":"29"},{"size":689,"mtime":1612186723393,"results":"44","hashOfConfig":"29"},{"size":4645,"mtime":1613650070246,"results":"45","hashOfConfig":"29"},{"size":2449,"mtime":1612444051794,"results":"46","hashOfConfig":"29"},{"size":582,"mtime":1612981134869,"results":"47","hashOfConfig":"29"},{"size":495,"mtime":1613491853474,"results":"48","hashOfConfig":"29"},{"size":4227,"mtime":1613565772450,"results":"49","hashOfConfig":"29"},{"size":427,"mtime":1613498659415,"results":"50","hashOfConfig":"29"},{"size":2049,"mtime":1613412802108,"results":"51","hashOfConfig":"29"},{"size":852,"mtime":1613393370132,"results":"52","hashOfConfig":"29"},{"size":2075,"mtime":1613393284909,"results":"53","hashOfConfig":"29"},{"size":1888,"mtime":1613412806774,"results":"54","hashOfConfig":"29"},{"size":789,"mtime":1613582996152,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1uc0eb9",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Martin\\spoti-vision\\src\\index.js",[],["116","117"],"C:\\Users\\Martin\\spoti-vision\\src\\store\\store.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\router\\AppRouter.js",["118"],"import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport RedirectPage from '../components/RedirectPage';\r\nimport Dashboard from '../components/Dashboard';\r\nimport NotFoundPage from '../components/NotFoundPage';\r\nimport { Container } from '@material-ui/core';\r\nimport Visualizer from '../components/Visualizer';\r\n\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    expiryTime: '0',\r\n  };\r\n\r\n  componentDidMount() {\r\n    let expiryTime;\r\n    try {\r\n      expiryTime = JSON.parse(localStorage.getItem('expiry_time'));\r\n    } catch (error) {\r\n      expiryTime = '0';\r\n    }\r\n    this.setState({ expiryTime });\r\n  }\r\n\r\n  setExpiryTime = expiryTime => {\r\n    this.setState({ expiryTime });\r\n  };\r\n\r\n  isValidSession = () => {\r\n    const currentTime = new Date().getTime();\r\n    const expiryTime = this.state.expiryTime;\r\n    const isSessionValid = currentTime < expiryTime;\r\n\r\n    return isSessionValid;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact={true}\r\n            render={props => (\r\n              <Home isValidSession={this.isValidSession} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/redirect\"\r\n            render={props => (\r\n              <RedirectPage\r\n                isValidSession={this.isValidSession}\r\n                setExpiryTime={this.setExpiryTime}\r\n                {...props}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/dashboard\"\r\n            render={props => (\r\n              <Dashboard isValidSession={this.isValidSession} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/visualizer\"\r\n            render={props => (\r\n              <Visualizer isValidSession={this.isValidSession} {...props} />\r\n            )}\r\n          />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","C:\\Users\\Martin\\spoti-vision\\src\\reducers\\playlist.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\reducers\\profile.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\reducers\\albums.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\reducers\\artists.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\reducers\\player.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\RedirectPage.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Home.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Dashboard.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Visualizer.js",["119"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCoverImage, initiateGetCurrTrack } from '../actions/result';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\nimport { Link } from 'react-router-dom';\r\nimport spotify_icon from '../images/Spotify_Icon_RGB_Black.png';\r\nimport _ from 'lodash';\r\n\r\nconst Visualizer = props => {\r\n  const { dispatch, isValidSession, history, location, player } = props;\r\n  const [albumCover, setAlbumCover] = useState('');\r\n\r\n  // should somehow adjust\r\n  const diagonal = Math.sqrt(\r\n    window.innerWidth * window.innerWidth +\r\n      window.innerHeight * window.innerHeight\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getThoseColours = () => {\r\n      props.dispatch(getCoverImage(albumCover));\r\n    };\r\n    if (albumCover) {\r\n      getThoseColours();\r\n    }\r\n  }, [albumCover]);\r\n\r\n  useEffect(() => {\r\n    if (!_.isEmpty(player)) {\r\n      setAlbumCover(player.item.album.images[0].url);\r\n    }\r\n  }, [player]);\r\n\r\n  if (isValidSession()) {\r\n    const currTrack = () => {\r\n      dispatch(initiateGetCurrTrack());\r\n    };\r\n    setTimeout(currTrack, player.timer);\r\n  } else {\r\n    history.push({\r\n      pathname: '/',\r\n      state: {\r\n        session_expired: true,\r\n        whereTo: location.pathname,\r\n      },\r\n    });\r\n  }\r\n\r\n  const backColors = player?.cover\r\n    ? player.cover.result.colors.image_colors\r\n    : ['white', 'orange', 'lightBlue'];\r\n\r\n  const first = backColors[0];\r\n  const second = backColors[1];\r\n  const third = backColors[2];\r\n\r\n  const background = {\r\n    // background:\r\n    //   'radial-gradient(transparent 50%, white), radial-gradient(yellow, transparent 70%)',\r\n    background: `repeating-conic-gradient(from 0deg, ${first.closest_palette_color_html_code} 0deg 10deg, ${second.closest_palette_color_html_code} 10deg 20deg, ${third.closest_palette_color_html_code} 20deg 30deg)`,\r\n    // background: `repeating-conic-gradient(from 0deg, ${first} 0deg 10deg, ${second} 10deg 20deg, ${third} 20deg 30deg)`,\r\n    animation: 'rotate 80s linear infinite',\r\n    width: `${diagonal}px`,\r\n    height: `${diagonal}px`,\r\n    borderRadius: '100%',\r\n    left: `-${(diagonal - window.innerWidth) / 2}px`,\r\n  };\r\n\r\n  if (!_.isEmpty(player)) {\r\n    const cover = player.item.album.images[0];\r\n    const height = cover.height;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {isValidSession() ? (\r\n          <div>\r\n            <div className=\"back\">\r\n              <img\r\n                className=\"spotify v-background\"\r\n                src={spotify_icon}\r\n                alt=\"Spotify\"\r\n              />\r\n              <Link to=\"/dashboard\">\r\n                <ExitToAppRoundedIcon className=\"v-background\" id=\"exit-v\" />\r\n              </Link>\r\n              {!_.isEmpty(player) && (\r\n                <img\r\n                  className=\"cover\"\r\n                  style={{ marginTop: `calc(50vh - ${height / 2}px)` }}\r\n                  alt={player.item.name}\r\n                  src={cover.url}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"backy\" style={background}></div>\r\n          </div>\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: {\r\n                session_expired: true,\r\n                whereTo: location.pathname,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst mapaStateToProps = state => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nexport default connect(mapaStateToProps)(Visualizer);\r\n","C:\\Users\\Martin\\spoti-vision\\src\\components\\NotFoundPage.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Header.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\SearchForm.js",["120","121","122"],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Loader.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Profile.js",["123","124"],"C:\\Users\\Martin\\spoti-vision\\src\\components\\SearchResult.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\utils\\functions.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\utils\\constants.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\actions\\result.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\Current.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\PlayList.js",["125"],"import React from 'react';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport _ from 'lodash';\r\nimport music from '../images/music-icon.jpg';\r\nimport { put } from '../utils/api';\r\n\r\nconst PlayList = ({ playlist }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(playlist).length > 0 && (\r\n        <div className=\"palylist\">\r\n          <Grid container spacing={4}>\r\n            {playlist.items.map((item, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Card\r\n                      style={{ width: '18rem' }}\r\n                      onClick={() => put(item.uri)}\r\n                    >\r\n                      <a\r\n                        target=\"_blank\"\r\n                        // href={item.external_urls.spotify}\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"card-image-link\"\r\n                      >\r\n                        {!_.isEmpty(item.images) ? (\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            image={item.images[0].url}\r\n                            title=\"\"\r\n                          />\r\n                        ) : (\r\n                          <img src={music} alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                      <CardContent>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                          {item.name}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                          By {item.owner.display_name}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlayList;\r\n","C:\\Users\\Martin\\spoti-vision\\src\\utils\\api.js",[],"C:\\Users\\Martin\\spoti-vision\\src\\components\\AlbumsList.js",["126"],"import React from 'react';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport _ from 'lodash';\r\nimport music from '../images/music-icon.jpg';\r\nimport { put } from '../utils/api';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          <Grid container spacing={4}>\r\n            {albums.items.map((album, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Card\r\n                      style={{ width: '18rem' }}\r\n                      onClick={() => put(album.uri)}\r\n                    >\r\n                      <a\r\n                        target=\"_blank\"\r\n                        //href={album.external_urls.spotify}\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"card-image-link\"\r\n                      >\r\n                        {!_.isEmpty(album.images) ? (\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            image={album.images[0].url}\r\n                            title=\"\"\r\n                          />\r\n                        ) : (\r\n                          <img src={music} alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                      <CardContent>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                          {album.name}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                          {album.artists.map(artist => artist.name).join(', ')}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;\r\n","C:\\Users\\Martin\\spoti-vision\\src\\components\\ArtistsList.js",["127"],"import React from 'react';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport _ from 'lodash';\r\nimport music from '../images/music-icon.jpg';\r\nimport { put } from '../utils/api';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          <Grid container spacing={4}>\r\n            {artists.items.map((artist, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Card\r\n                      style={{ width: '18rem' }}\r\n                      onClick={() => put(artist.uri)}\r\n                    >\r\n                      <a\r\n                        target=\"_blank\"\r\n                        // href={artist.external_urls.spotify}\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"card-image-link\"\r\n                      >\r\n                        {!_.isEmpty(artist.images) ? (\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            image={artist.images[0].url}\r\n                            title=\"\"\r\n                          />\r\n                        ) : (\r\n                          <img src={music} alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                      <CardContent>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                          {artist.name}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;\r\n","C:\\Users\\Martin\\spoti-vision\\src\\utils\\styles.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":27,"column":6,"nodeType":"138","endLine":27,"endColumn":18,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"140","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":19},{"ruleId":"132","severity":1,"message":"141","line":8,"column":10,"nodeType":"134","messageId":"135","endLine":8,"endColumn":20},{"ruleId":"132","severity":1,"message":"142","line":11,"column":9,"nodeType":"134","messageId":"135","endLine":11,"endColumn":26},{"ruleId":"132","severity":1,"message":"143","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":42,"column":6,"nodeType":"138","endLine":42,"endColumn":8,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":27,"column":23,"nodeType":"147","endLine":32,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":27,"column":23,"nodeType":"147","endLine":32,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":27,"column":23,"nodeType":"147","endLine":32,"endColumn":24},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["150"],"'TextField' is defined but never used.","'searchTerm' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'useState' is defined but never used.",["151"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [albumCover, props]",{"range":"156","text":"157"},"Update the dependencies array to be: [props]",{"range":"158","text":"159"},[917,929],"[albumCover, props]",[1053,1055],"[props]"]